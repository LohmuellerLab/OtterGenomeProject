require(reshape2)
require(ggplot2)
require(scales)
require(ggpubr)
elutCol="#377EB8"
pbraCol="#4DAF4A"
elut2Col="#C77CFF"
fullpagewidth_mm=170
halfpagewidth_mm=85
maxheight=225
elut_inputCounts <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/mappingGidgetReadsToFerret/VEP/VEP-50_250DPFilter_canon_cds/includesShared/01_Elut_CA_Gidget.20171006.VepResultsCountSummary.txt",header=T)
misHetElut <- elut_inputCounts[elut_inputCounts$category=="missense" & elut_inputCounts$genotype=="Heterozygous",]$count # missense het count
misHomElut <- elut_inputCounts[elut_inputCounts$category=="missense" & elut_inputCounts$genotype=="HomozygousAlt",]$count
synHetElut <- elut_inputCounts[elut_inputCounts$category=="synonymous" & elut_inputCounts$genotype=="Heterozygous",]$count
synHomElut <- elut_inputCounts[elut_inputCounts$category=="synonymous" & elut_inputCounts$genotype=="HomozygousAlt",]$count
sgHetElut <- elut_inputCounts[elut_inputCounts$category=="stopgained" & elut_inputCounts$genotype=="Heterozygous",]$count
sgHomElut <- elut_inputCounts[elut_inputCounts$category=="stopgained" & elut_inputCounts$genotype=="HomozygousAlt",]$count
pbra_inputCounts <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/mappingGiantOtterReadsToFerret/VEP/VEP-50_250DPFilter_canon_cds/includesShared/loadCalcs_includesSharedVars/PteBra_1.20171206.VepResultsCountSummary.IncludesShared.txt",header=T)
misHetPbra <- pbra_inputCounts[pbra_inputCounts$category=="missense" & pbra_inputCounts$genotype=="Heterozygous",]$count # missense het count
misHomPbra <- pbra_inputCounts[pbra_inputCounts$category=="missense" & pbra_inputCounts$genotype=="HomozygousAlt",]$count
synHetPbra <- pbra_inputCounts[pbra_inputCounts$category=="synonymous" & pbra_inputCounts$genotype=="Heterozygous",]$count
synHomPbra <- pbra_inputCounts[pbra_inputCounts$category=="synonymous" & pbra_inputCounts$genotype=="HomozygousAlt",]$count
sgHetPbra <- pbra_inputCounts[pbra_inputCounts$category=="stopgained" & pbra_inputCounts$genotype=="Heterozygous",]$count
sgHomPbra <- pbra_inputCounts[pbra_inputCounts$category=="stopgained" & pbra_inputCounts$genotype=="HomozygousAlt",]$count
elut2_inputCounts <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/mappingNorthernSeaOtterReadsToFerret/VEP_50_250DPFilter/VEP-50_250DPFilter_canon_cds/includesShared/loadCalcs_includesSharedVars/filteredVepOutput2-ForLoadCalcs/02_Elut_SEAK_Elfin.20190215_nso_lib283only.VepResultsCountSummary.txt",header=T)
misHetElut2 <- elut2_inputCounts[elut2_inputCounts$category=="missense" & elut2_inputCounts$genotype=="Heterozygous",]$count # missense het count
misHomElut2 <- elut2_inputCounts[elut2_inputCounts$category=="missense" & elut2_inputCounts$genotype=="HomozygousAlt",]$count
synHetElut2 <- elut2_inputCounts[elut2_inputCounts$category=="synonymous" & elut2_inputCounts$genotype=="Heterozygous",]$count
synHomElut2 <- elut2_inputCounts[elut2_inputCounts$category=="synonymous" & elut2_inputCounts$genotype=="HomozygousAlt",]$count
sgHetElut2 <- elut2_inputCounts[elut2_inputCounts$category=="stopgained" & elut2_inputCounts$genotype=="Heterozygous",]$count
sgHomElut2 <- elut2_inputCounts[elut2_inputCounts$category=="stopgained" & elut2_inputCounts$genotype=="HomozygousAlt",]$count
totalMisPbra = (as.numeric(misHomPbra[1])+0.5*as.numeric(misHetPbra[1]))
totalSynPbra =  (as.numeric(synHomPbra[1])+0.5*as.numeric(synHetPbra[1]))
totalMisElut = (as.numeric(misHomElut[1])+0.5*as.numeric(misHetElut[1]))
totalSynElut =  (as.numeric(synHomElut[1])+0.5*as.numeric(synHetElut[1]))
totalMisElut2 = (as.numeric(misHomElut2[1])+0.5*as.numeric(misHetElut2[1]))
totalSynElut2 =  (as.numeric(synHomElut2[1])+0.5*as.numeric(synHetElut2[1]))
elut_codingCallableSites_perChunk <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/mappingGidgetReadsToFerret/genome-stats/calculatingCodingCallableSites/countCallableCDSRegions_50_250DPFilter//elut.callableSites.ferretCDSRegions.txt",header=T)
total_Coding_Callable_elut <- sum(elut_codingCallableSites_perChunk$callableCDSSites)
total_Coding_Callable_elut # 30680418 (formerly 25,591,577 (callable coding sites) (~10% of genome, good.) )
pbra_codingCallableSites_perChunk <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/mappingGiantOtterReadsToFerret/genome-stats/calculatingCodingCallableSites/countCallableCDSRegions_50_250DPFilter/pbra.callableSites.ferretCDSRegions.txt",header=T)
total_Coding_Callable_pbra <- sum(pbra_codingCallableSites_perChunk$callableCDSSites)
total_Coding_Callable_pbra # 30070013 (forermly 29,200,510 AHA! Pbra had more coding callable sites.)
elut2_codingCallableSites_perChunk <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/mappingNorthernSeaOtterReadsToFerret//genome-stats/CallableCDSSites/elut2.callableSites.ferretCDSRegions.txt",header=T)
total_Coding_Callable_elut2 <- sum(elut2_codingCallableSites_perChunk$callableCDSSites)
total_Coding_Callable_elut2 # 31002191 * more sites because higher coverage * *this is with improved 20x-250x Dp filter *
average_Coding_Callable <- (total_Coding_Callable_elut+total_Coding_Callable_pbra+total_Coding_Callable_elut2)/3
average_Coding_Callable  # 30584207 [ for just the two otters elut1/pbra it was 30375216; goes up because elut2 has more called sites (formerly 27396044 )
e1_prop <- (as.numeric(synHetElut[1])+2*as.numeric(synHomElut[1]))/(total_Coding_Callable_elut)
p1_prop <-  (as.numeric(synHetPbra[1])+2*as.numeric(synHomPbra[1]))/(total_Coding_Callable_pbra)
e1_prop2 <- (as.numeric(synHetElut2[1])+2*as.numeric(synHomElut2[1]))/(total_Coding_Callable_elut2)
e1_prop # gidget
p1_prop
e1_prop2 # nso
SynDerivedElutRescaled <- e1_prop*average_Coding_Callable
SynDerivedPbraRescaled <- p1_prop*average_Coding_Callable
SynDerivedElut2Rescaled <- e1_prop2*average_Coding_Callable
SynDerivedElutRescaled
SynDerivedPbraRescaled
SynDerivedElut2Rescaled
e2_prop <- (as.numeric(misHetElut[1])+2*as.numeric(misHomElut[1]))/total_Coding_Callable_elut
p2_prop <-  (as.numeric(misHetPbra[1])+2*as.numeric(misHomPbra[1]))/total_Coding_Callable_pbra
e2_prop2 <- (as.numeric(misHetElut2[1])+2*as.numeric(misHomElut2[1]))/total_Coding_Callable_elut2
e2_prop
p2_prop
e2_prop2
MisDerivedElutRescaled <- e2_prop*average_Coding_Callable
MisDerivedPbraRescaled <- p2_prop*average_Coding_Callable
MisDerivedElut2Rescaled <- e2_prop2*average_Coding_Callable
MisDerivedElutRescaled
MisDerivedPbraRescaled
MisDerivedElut2Rescaled
e3_prop <- (as.numeric(sgHetElut[1])+2*as.numeric(sgHomElut[1]))/total_Coding_Callable_elut
p3_prop <-  (as.numeric(sgHetPbra[1])+2*as.numeric(sgHomPbra[1]))/total_Coding_Callable_pbra
e3_prop2 <- (as.numeric(sgHetElut2[1])+2*as.numeric(sgHomElut2[1]))/total_Coding_Callable_elut2
e3_prop
p3_prop
e3_prop2
SGDerivedElutRescaled <- e3_prop*average_Coding_Callable
SGDerivedPbraRescaled <- p3_prop*average_Coding_Callable
SGDerivedElut2Rescaled <- e3_prop2*average_Coding_Callable
SGDerivedElutRescaled
SGDerivedPbraRescaled
SGDerivedElut2Rescaled
dfDerived <- data.frame(rbind(SGDerivedElutRescaled,SGDerivedElut2Rescaled,SGDerivedPbraRescaled,MisDerivedElutRescaled,MisDerivedElut2Rescaled,MisDerivedPbraRescaled,SynDerivedElutRescaled,SynDerivedElut2Rescaled,SynDerivedPbraRescaled))
colnames(dfDerived) <- "RescaledCount"
dfDerived$spp <- c("S. Sea Otter","N. Sea Otter","Giant Otter","S. Sea Otter","N. Sea Otter","Giant Otter","S. Sea Otter","N. Sea Otter","Giant Otter")
dfDerived$type <- c("Stop-Gained","Stop-Gained","Stop-Gained","Missense","Missense","Missense","Synonymous","Synonymous","Synonymous")
ggplot(dfDerived,aes(x=spp,y=RescaledCount,fill=spp))+
geom_bar(stat="identity")+
facet_wrap(~type,scales="free")
elutBoots <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/mappingGidgetReadsToFerret/VEP/VEP-50_250DPFilter_canon_cds/includesShared/elut_derivedAllele_bootstraps/elut.allBootstrapsConcatted.results.txt",header=T) # got from Hoffman, result of step 7b
dim(elutBoots) # 1000 bootstraps
elutBoots_melt <- melt(elutBoots)
elutBoots_melt$spp <- "S. Sea Otter"
elutBoots_melt$type <- NA
elutBoots_melt[elutBoots_melt$variable=="MissenseDerived",]$type <- "Missense"
elutBoots_melt[elutBoots_melt$variable=="SynonymousDerived",]$type <- "Synonymous"
elutBoots_melt[elutBoots_melt$variable=="Stop_GainedDerived",]$type <- "Stop-Gained"
colnames(elutBoots_melt) <- c("variable","RescaledCount","spp","type")
elutBoots_melt_derived <- elutBoots_melt[elutBoots_melt$variable %in% c("MissenseDerived","SynonymousDerived","Stop_GainedDerived"),]
pbraBoots <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/mappingGiantOtterReadsToFerret/VEP/VEP-50_250DPFilter_canon_cds/includesShared/loadCalcs_includesSharedVars/pbra_derivedAllele_bootstraps/pbra.allBootstrapsConcatted.results.txt",header=T) # got from Hoffman, result of step 7b THESE INCLUDE SHARED ALLELEs
dim(pbraBoots) # 1000 bootstraps
pbraBoots_melt <- melt(pbraBoots)
pbraBoots_melt$spp <- "Giant Otter"
pbraBoots_melt$type <- NA
pbraBoots_melt[pbraBoots_melt$variable=="MissenseDerived",]$type <- "Missense"
pbraBoots_melt[pbraBoots_melt$variable=="SynonymousDerived",]$type <- "Synonymous"
pbraBoots_melt[pbraBoots_melt$variable=="Stop_GainedDerived",]$type <- "Stop-Gained"
colnames(pbraBoots_melt) <- c("variable","RescaledCount","spp","type")
pbraBoots_melt_derived <- pbraBoots_melt[pbraBoots_melt$variable %in% c("MissenseDerived","SynonymousDerived","Stop_GainedDerived"),]
elut2Boots <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/mappingNorthernSeaOtterReadsToFerret/VEP_50_250DPFilter/VEP-50_250DPFilter_canon_cds/includesShared/loadCalcs_includesSharedVars/filteredVepOutput2-ForLoadCalcs/elut2_derivedAllele_bootstraps/elut2.allBootstrapsConcatted.results.txt",header=T) # got from Hoffman, result of step 7b THESE INCLUDE SHARED ALLELEs
dim(elut2Boots) # 1000 bootstraps
elut2Boots_melt <- melt(elut2Boots)
elut2Boots_melt$spp <- "N. Sea Otter"
elut2Boots_melt$type <- NA
elut2Boots_melt[elut2Boots_melt$variable=="MissenseDerived",]$type <- "Missense"
elut2Boots_melt[elut2Boots_melt$variable=="SynonymousDerived",]$type <- "Synonymous"
elut2Boots_melt[elut2Boots_melt$variable=="Stop_GainedDerived",]$type <- "Stop-Gained"
colnames(elut2Boots_melt) <- c("variable","RescaledCount","spp","type")
elut2Boots_melt_derived <- elut2Boots_melt[elut2Boots_melt$variable %in% c("MissenseDerived","SynonymousDerived","Stop_GainedDerived"),]
allsppBoots_melt_derived <- rbind(elutBoots_melt_derived,elut2Boots_melt_derived,pbraBoots_melt_derived)
print(levels(as.factor(allsppBoots_melt_derived$type)))
allsppBoots_melt_derived$type <- factor(allsppBoots_melt_derived$type,levels=c("Synonymous","Missense","Stop-Gained"))
print(levels(as.factor(allsppBoots_melt_derived$type)))
print(levels(as.factor(dfDerived$type)))
dfDerived$type <- factor(dfDerived$type,levels=c("Synonymous","Missense","Stop-Gained"))
print(levels(as.factor(dfDerived$type)))
p1 <- ggplot(allsppBoots_melt_derived,aes(x=spp,y=RescaledCount/1000,fill=spp))+
theme_bw()+
geom_violin(alpha=0.5)+
scale_fill_manual(values=c(pbraCol,elut2Col,elutCol))+
geom_point(data=dfDerived,aes(x=spp,y=RescaledCount/1000),color="black",size=2)+
facet_wrap(~type,scales = "free_y")+
theme(strip.text.x = element_text(size = 10, colour = "black"),legend.title = element_blank(),legend.position = "none",axis.text.x=element_text(size=6))+
ylab("Derived Alleles\n(x1000)")+
xlab("")
p1
levels(allsppBoots_melt_derived$spp)
levels(as.factor(allsppBoots_melt_derived$spp))
allsppBoots_melt_derived$spp <- factor(allsppBoots_melt_derived$spp,levels=c("Giant Otter" , "S. Sea Otter" ,"N. Sea Otter"))
levels(as.factor(allsppBoots_melt_derived$spp))
p1 <- ggplot(allsppBoots_melt_derived,aes(x=spp,y=RescaledCount/1000,fill=spp))+
theme_bw()+
geom_violin(alpha=0.5)+
scale_fill_manual(values=c(pbraCol,elut2Col,elutCol))+
geom_point(data=dfDerived,aes(x=spp,y=RescaledCount/1000),color="black",size=2)+
facet_wrap(~type,scales = "free_y")+
theme(strip.text.x = element_text(size = 10, colour = "black"),legend.title = element_blank(),legend.position = "none",axis.text.x=element_text(size=6))+
ylab("Derived Alleles\n(x1000)")+
xlab("")
p1 <- ggplot(allsppBoots_melt_derived,aes(x=spp,y=RescaledCount/1000,fill=spp))+
theme_bw()+
geom_violin(alpha=0.5)+
scale_fill_manual(values=c(pbraCol,elutCol,elut2Col))+
geom_point(data=dfDerived,aes(x=spp,y=RescaledCount/1000),color="black",size=2)+
facet_wrap(~type,scales = "free_y")+
theme(strip.text.x = element_text(size = 10, colour = "black"),legend.title = element_blank(),legend.position = "none",axis.text.x=element_text(size=6))+
ylab("Derived Alleles\n(x1000)")+
xlab("")
p1
p1 <- ggplot(allsppBoots_melt_derived,aes(x=spp,y=RescaledCount/1000,fill=spp))+
theme_bw()+
geom_violin(alpha=0.5)+
scale_fill_manual(values=c(pbraCol,elutCol,elut2Col))+
geom_point(data=dfDerived,aes(x=spp,y=RescaledCount/1000),color="black",size=2)+
facet_wrap(~type,scales = "free_y")+
theme(strip.text.x = element_text(size = 10, colour = "black"),legend.title = element_blank(),legend.position = "none",axis.text.x=element_text(size=6))+
ylab("Derived Alleles\n(x1000)")+
xlab("")
p1
SynHomDerivedGTsElutRescaled <- (synHomElut/total_Coding_Callable_elut)*average_Coding_Callable
MisHomDerivedGTsElutRescaled <- (misHomElut/total_Coding_Callable_elut)*average_Coding_Callable
SGHomDerivedGTsElutRescaled <- (sgHomElut/total_Coding_Callable_elut)*average_Coding_Callable
SynHomDerivedGTsPbraRescaled <- (synHomPbra/total_Coding_Callable_pbra)*average_Coding_Callable
MisHomDerivedGTsPbraRescaled <- (misHomPbra/total_Coding_Callable_pbra)*average_Coding_Callable
SGHomDerivedGTsPbraRescaled <- (sgHomPbra/total_Coding_Callable_pbra)*average_Coding_Callable
SynHomDerivedGTsElut2Rescaled <- (synHomElut2/total_Coding_Callable_elut2)*average_Coding_Callable
MisHomDerivedGTsElut2Rescaled <- (misHomElut2/total_Coding_Callable_elut2)*average_Coding_Callable
SGHomDerivedGTsElut2Rescaled <- (sgHomElut2/total_Coding_Callable_elut2)*average_Coding_Callable
dfHomDerivedGTs <- data.frame(rbind(SGHomDerivedGTsElutRescaled,SGHomDerivedGTsElut2Rescaled,SGHomDerivedGTsPbraRescaled,MisHomDerivedGTsElutRescaled,MisHomDerivedGTsElut2Rescaled,MisHomDerivedGTsPbraRescaled,SynHomDerivedGTsElutRescaled,SynHomDerivedGTsElut2Rescaled,SynHomDerivedGTsPbraRescaled))
colnames(dfHomDerivedGTs) <- "RescaledCount"
dfHomDerivedGTs$spp <- c("S. Sea Otter","N. Sea Otter","Giant Otter","S. Sea Otter","N. Sea Otter","Giant Otter","S. Sea Otter","N. Sea Otter","Giant Otter")
dfHomDerivedGTs$type <- c("Stop-Gained","Stop-Gained","Stop-Gained","Missense","Missense","Missense","Synonymous","Synonymous","Synonymous")
pbraBoots_melt[pbraBoots_melt$variable=="missenseHomCount",]$type <- "Missense"
pbraBoots_melt[pbraBoots_melt$variable=="synHomGenotypeCount",]$type <- "Synonymous"
pbraBoots_melt[pbraBoots_melt$variable=="sgHomCount",]$type <- "Stop-Gained"
pbraBoots_melt_HomGTs <- pbraBoots_melt[pbraBoots_melt$variable %in% c("missenseHomCount","synHomGenotypeCount","sgHomCount"),]
elutBoots_melt[elutBoots_melt$variable=="missenseHomCount",]$type <- "Missense"
elutBoots_melt[elutBoots_melt$variable=="synHomGenotypeCount",]$type <- "Synonymous"
elutBoots_melt[elutBoots_melt$variable=="sgHomCount",]$type <- "Stop-Gained"
elutBoots_melt_HomGTs <- elutBoots_melt[elutBoots_melt$variable %in% c("missenseHomCount","synHomGenotypeCount","sgHomCount"),]
elut2Boots_melt[elut2Boots_melt$variable=="missenseHomCount",]$type <- "Missense"
elut2Boots_melt[elut2Boots_melt$variable=="synHomGenotypeCount",]$type <- "Synonymous"
elut2Boots_melt[elut2Boots_melt$variable=="sgHomCount",]$type <- "Stop-Gained"
elut2Boots_melt_HomGTs <- elut2Boots_melt[elut2Boots_melt$variable %in% c("missenseHomCount","synHomGenotypeCount","sgHomCount"),]
allsppBoots_melt_HomGTs <- rbind(elutBoots_melt_HomGTs,pbraBoots_melt_HomGTs,elut2Boots_melt_HomGTs)
print(levels(as.factor(allsppBoots_melt_HomGTs$type)))
allsppBoots_melt_HomGTs$type <- factor(allsppBoots_melt_HomGTs$type,levels=c("Synonymous","Missense","Stop-Gained"))
print(levels(as.factor(allsppBoots_melt_HomGTs$type)))
print(levels(as.factor(dfHomDerivedGTs$type)))
dfHomDerivedGTs$type <- factor(dfHomDerivedGTs$type,levels=c("Synonymous","Missense","Stop-Gained"))
print(levels(as.factor(dfHomDerivedGTs$type)))
levels(as.factor(allsppBoots_melt_HomGTs$spp))
allsppBoots_melt_HomGTs$spp <- factor(allsppBoots_melt_HomGTs$spp,levels=c("Giant Otter" , "S. Sea Otter" ,"N. Sea Otter"))
levels(as.factor(allsppBoots_melt_HomGTs$spp))
p2 <- ggplot(allsppBoots_melt_HomGTs,aes(x=spp,y=RescaledCount/1000,fill=spp))+
theme_bw()+
geom_violin(alpha=0.5)+
scale_fill_manual(values=c(pbraCol,elutCol,elut2Col))+
geom_point(data=dfHomDerivedGTs,aes(x=spp,y=RescaledCount/1000),color="black",size=2)+
facet_wrap(~type,scales = "free_y")+
theme(strip.text.x = element_text(size = 10, colour = "black"),legend.title = element_blank(),legend.position = "none",axis.text.x=element_text(size=6))+
ylab("Homozygous Derived\nGenotypes (x1000)")+
xlab("")
require(gridExtra)
grid.arrange(p1,p2)
ggsave("/Users/annabelbeichman/Documents/UCLA/Otters/GidgetDeNovoGenome/Genome_Manuscript/Figures/VEP-GeneticLoad/loadFigure.derived.homozygous.INCLUDESNSO.pdf",grid.arrange(p1,p2),device="pdf",width=16.9,height=8,units = "cm",dpi=300)
ggsave("/Users/annabelbeichman/Documents/UCLA/Otters/GidgetDeNovoGenome/Genome_Manuscript/Figures/VEP-GeneticLoad/loadFigure.derived.homozygous.INCLUDESNSO.tif",grid.arrange(p1,p2),device="tiff",width=16.9,height=8,units = "cm",dpi=300,compression = "lzw")
input <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/privateShared.PerOtterPair.allScaffs.txt.gz",header=T)
input <- read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/privateShared.PerOtterPair.allScaffs.txt.gz",header=T,sep="\t")
head(input)
require(dplyr)
tallies <- input %>%
group_by(category,IndividualOrPair) %>%
summarise(sum(count))
tallies
tallies_df <- data.frame(tallies)
tallies_df
171693/15962616
tallies_df$species <- c("All","N. sea otter + S. sea otter","N. sea otter + giant otter","S. sea otter + giant otter","N. sea otter","S. sea otter","giant otter")
tallies_df
tallies_df
tallies_df$species <- c("All","N. sea otter + S. sea otter","N. sea otter + giant otter","S. sea otter + giant otter","N. sea otter","S. sea otter","giant otter")
require(ggplot2)
colnames(tallies) <- c("category","IndividualOrPair","count","species")
colnames(tallies_df) <- c("category","IndividualOrPair","count","species")
ggplot(tallies_df,aes(x=species,y=count))+
geom_bar(stat="identity")+
facet_wrap(~category)
ggplot(tallies_df,aes(x=species,y=count))+
geom_bar(stat="identity")+
facet_wrap(~category,scales="free")
ggplot(tallies_df,aes(x=species,y=count))+
geom_bar(stat="identity")+
facet_wrap(~category,scales="free")+
scale_y_log10()
ggplot(tallies_df,aes(x=species,y=count))+
geom_bar(stat="identity")+
facet_wrap(~category,scales="free")+
scale_y_log10()+
theme_bw()
tallies_df$species <- c("All","N. & S. sea otter","N. sea otter & giant otter","S. sea otter & giant otter","N. sea otter","S. sea otter","giant otter")
colnames(tallies_df) <- c("category","IndividualOrPair","count","species")
require(ggplot2)
ggplot(tallies_df,aes(x=species,y=count))+
geom_bar(stat="identity")+
facet_wrap(~category,scales="free")+
scale_y_log10()+
theme_bw()
write.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/private-shared.totalCountsPerGenome.txt",tallies_df[,c("category","species","count")])
write.table(,tallies_df[,c("category","species","count")],"/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/private-shared.totalCountsPerGenome.txt")
write.table(tallies_df[,c("category","species","count")],"/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/private-shared.totalCountsPerGenome.txt")
write.table(tallies_df[,c("category","species","count")],"/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/private-shared.totalCountsPerGenome.txt",quote=F,row.names=F,sep="\t")
p <- ggplot(tallies_df,aes(x=species,y=count))+
geom_bar(stat="identity")+
facet_wrap(~category,scales="free")+
scale_y_log10()+
theme_bw()
p
p <- ggplot(tallies_df[tallies_df$category!="allShared",],aes(x=species,y=count))+
geom_bar(stat="identity")+
facet_wrap(~category,scales="free")+
scale_y_log10()+
theme_bw()
p
p <- ggplot(tallies_df[tallies_df$category!="allShared",],aes(x=species,y=count))+
geom_bar(stat="identity")+
facet_wrap(~category,scales="free")+
scale_y_log10()+
theme_bw()+
ggtitle("Private vs. Shared biallelic SNPs")
p
ggsave("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/privateVSshared.biallelicSNPS.pdf",device="pdf",width=5,height=5)
ggsave("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/privateVSshared.biallelicSNPS.pdf",p,device="pdf",width=5,height=5)
ggsave("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/privateVSshared.biallelicSNPS.pdf",p,device="pdf",width=7,height=5)
write.table(tallies_df[,c("category","species","count")],"/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/private-shared.totalCountsPerGenome.txt",quote=F,row.names=F,sep="\t")
ggsave("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/privateVSshared.biallelicSNPS.pdf",p,device="pdf",width=10,height=5)
ggsave("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/SharedPrivateSites/results/privateVSshared.biallelicSNPS.pdf",p,device="pdf",width=10,height=5)
data.dir="/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/resultsCombining_all3Otters_inclNSO/ABBA-BABA/"
binsize=500000 # 500kb
require(GenomicRanges)
require(bootstrap)
abbaBaba <- read.table(paste(data.dir,"ABBA-BABA.allScaffs.txt.gz",sep=""),header=T,sep="\t",stringsAsFactors = F)
data.dir
abbaBaba <- read.table(paste(data.dir,"results/ABBA-BABA.allScaffs.txt.gz",sep=""),header=T,sep="\t",stringsAsFactors = F)
head(abbaBaba)
abbaBaba_GRanges <- GRanges(seqnames=as.character(abbaBaba$scaffold),ranges=as.character(abbaBaba$pos),abba=as.numeric(abbaBaba$abba),baba=as.numeric(abbaBaba$baba))
abbaBaba_GRanges
mustelaChrSizes <- (read.table("/Users/annabelbeichman/Documents/UCLA/Otters/RawReadsToGenotypes_Dec2016/mappingGidgetReadsToFerret/genome-stats/SlidingWindowheterozygosity/Mustela_putorius_furo.MusPutFur1.0.dna.toplevel.224.ChrLengths.txt",sep=",",stringsAsFactors = F,strip.white = T))
mustelaChrSizes <- data.frame(t(mustelaChrSizes))
colnames(mustelaChrSizes) <- "record"
mustelaChrSizes$scaff <- lapply(strsplit(as.character(mustelaChrSizes$record),":"),"[",1)
mustelaChrSizes$size <- lapply(strsplit(as.character(mustelaChrSizes$record),":"),"[",2)
mustelaChrSizes_AB <-  mustelaChrSizes[mustelaChrSizes$scaff %in% seqnames(abbaBaba_GRanges),] # select those for which we have abba baba information
mustelaChrSizes_AB
sizes <- as.numeric(mustelaChrSizes_AB$size)
names(sizes) <- mustelaChrSizes_AB$scaff
head(sizes)
bins   <- tileGenome(sizes, tilewidth=binsize, cut.last.tile.in.chrom=T)
bins
bins$binNum <- seq(1,length(bins))
length(unique(bins$binNum))
abbaRLE <- mcolAsRleList(abbaBaba_GRanges, varname = "abba")
babaRLE <- mcolAsRleList(abbaBaba_GRanges, varname = "baba")
binnedSum <- function(bins, numvar, mcolname)
{
stopifnot(is(bins, "GRanges"))
stopifnot(is(numvar, "RleList"))
stopifnot(identical(seqlevels(bins), names(numvar)))
bins_per_chrom <- split(ranges(bins), seqnames(bins))
sums_list <- lapply(names(numvar),
function(seqname) {
views <- Views(numvar[[seqname]],
bins_per_chrom[[seqname]])
viewSums(views,na.rm = T)
})
new_mcol <- unsplit(sums_list, as.factor(seqnames(bins)))
mcols(bins)[[mcolname]] <- new_mcol
bins
}
abba_sum_binned = as.data.frame(binnedSum(bins,abbaRLE,"abba_sum"))
baba_sum_binned = as.data.frame(binnedSum(bins,babaRLE,"baba_sum"))
abba_sum_binned
abba_baba_bin_summed <- merge(abba_sum_binned[,c("binNum","abba_sum")],baba_sum_binned[,c("binNum","baba_sum")],by="binNum")
head(abba_baba_bin_summed)
Dstat_binNum=function(x,dataframe){
# abba_baba_bin_summed is in format binNum abba_sum baba_sum where abba and baba sums are sums of that bin
D=(sum(dataframe[x,]$abba_sum)-sum(dataframe[x,]$baba_sum))/(sum(dataframe[x,]$abba_sum)+sum(dataframe[x,]$baba_sum))
return(D)
}
jack <- jackknife(1:length(abba_baba_bin_summed$binNum),Dstat_binNum,abba_baba_bin_summed) # this worked!!!
jack
D_noJack <- (sum(abba_baba_bin_summed$abba_sum) - sum(abba_baba_bin_summed$baba_sum))/(sum(abba_baba_bin_summed$abba_sum) + sum(abba_baba_bin_summed$baba_sum)) # actual estimate of D from all the data
D_noJack
D_err <- jack$jack.se # standard error
D_err
D_Z <- D_noJack / D_err # z-score (x - mean / sterror); here mean is 0 because we are testing if ABBA-BABA is sig diff from zero. so it just becomes D / DstdErr
D_Z
D_p <- 2*pnorm(-abs(D_Z)) # pvalue
D_p
sink(paste(data.dir,"ABBA-BABA.Jackknife.txt",sep=""))
cat("D-Stat from data: ",D_noJack,"\n")
cat("Jackknife std error: ",D_err,"\n")
cat("D Z score (D/D_stdError): ",D_Z,"\n")
cat("D p value: ",D_p,"\n")
sink()
jack$jack.values
length(jack$jack.values)
jack
abba_baba_bin_summed
dim(abba_baba_bin_summed)
sink(paste(data.dir,"results/ABBA-BABA.Jackknife.txt",sep=""))
cat("D-Stat from data: ",D_noJack,"\n")
cat("Jackknife std error: ",D_err,"\n")
cat("D Z score (D/D_stdError): ",D_Z,"\n")
cat("D p value: ",D_p,"\n")
sink()
